






Started logging.

<<<
Content-Length: 3093

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":6920,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\I use Arch btw!\\Documents\\GitHub\\bedeckler","rootUri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler","name":"bedeckler"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.6.0"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3462

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","languageId":"cpp","version":994,"text":"#include <FtduinoSimple.h>\r\n#include <AccessNode.h>\r\n\r\nint i3Wert = 0;\r\nRobotikInterConnect* ric;\r\nint counter = 0;\r\nbool isClicked = false;\r\n\r\n\r\nvoid setup() { //############## Aktuelle Labels an Maschiene stimmen ##############\r\n    ric = new RobotikInterConnect(\"bedeckler\");\r\n\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n}\r\nvoid loop() {\r\n  // put your main code here, to run repeatedly:\r\n  run();\r\n}\r\n\r\n//\r\n\r\nvoid run() {\r\n  ric->send(\"mfc\",\"websocket\",\"OK\"); //ric Anbindung -> sendet OK\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I1)) delay(1); // Lichtsensor 1 wartet auf Eingabe\r\n  delay(500);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.output_set(Ftduino::O7, Ftduino::HI); //Deckelspirale an\r\n  delay(6000);\r\n  ftduino.output_set(Ftduino::O7, Ftduino::OFF); //Deckelspirale aus\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::RIGHT); //Deckelmodul fährt zurück\r\n  while (!ftduino.input_get(Ftduino::I3)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF); //Deckelmodul stoppt an Schalter\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I4)) delay(1); //Lichtsensor 2 wartet auf Eingabe\r\n  delay(2000);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::RIGHT); //Pressmodul fährt runter / presst\r\n  delay(2400);\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt hoch\r\n  while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF); //Pressmodul stoppt an Schalter\r\n  \r\n  ftduino.motor_set(Ftduino::M3, Ftduino::RIGHT); //Schranke geht auf\r\n  delay(2500);\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::OFF); //Schranke aus\r\n\r\n  ric->send(\"mfc\",\"websocket\",\"NEXT\"); //Bedeckler sendet NEXT an ric\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgangsposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n  delay(500);\r\n}\r\n"}}}Content-Length: 183

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 197

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/I%20use%20Arch%20btw%21/AppData/Local/Temp/arduino-language-server327870922/.clangd","diagnostics":[]}}Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 192

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1,"diagnostics":[]}}Content-Length: 1480

{"jsonrpc":"2.0","id":1,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/29","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/29","percentage":6}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/29","percentage":6}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/29","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/29","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/29","percentage":13}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/29","percentage":13}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/29","percentage":17}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/29","percentage":17}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/29","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/29","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/29","percentage":24}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/29","percentage":27}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/29","percentage":31}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/29","percentage":31}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/29","percentage":34}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/29","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/29","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/29","percentage":41}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/29","percentage":41}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/29","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/29","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/29","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/29","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/29","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/29","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/29","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/29","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/29","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/29","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/29","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/29","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/29","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/29","percentage":68}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/29","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/29","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/29","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/29","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/29","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/29","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/29","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/29","percentage":86}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/29","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/29","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/29","percentage":93}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/29","percentage":93}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/29","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":3,"character":8}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":2,"result":{"contents":{"kind":"markdown","value":"### variable `i3Wert`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\nint i3Wert = 0\n```"},"range":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}}}
<<<
Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 212

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":14,"character":35}}}
>>>
Content-Length: 236

{"jsonrpc":"2.0","id":3,"result":{"contents":{"kind":"markdown","value":"### class `Ftduino`  \n\n---\nValue = `0`  \n\n---\n```cpp\nclass Ftduino {}\n```"},"range":{"start":{"line":14,"character":35},"end":{"line":14,"character":42}}}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":14,"character":35}}}
>>>
Content-Length: 5108

{"jsonrpc":"2.0","id":4,"result":[{"range":{"start":{"line":12,"character":22},"end":{"line":12,"character":29}},"kind":1},{"range":{"start":{"line":12,"character":35},"end":{"line":12,"character":42}},"kind":1},{"range":{"start":{"line":13,"character":30},"end":{"line":13,"character":37}},"kind":1},{"range":{"start":{"line":14,"character":22},"end":{"line":14,"character":29}},"kind":1},{"range":{"start":{"line":14,"character":35},"end":{"line":14,"character":42}},"kind":1},{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":29}},"kind":1},{"range":{"start":{"line":16,"character":35},"end":{"line":16,"character":42}},"kind":1},{"range":{"start":{"line":17,"character":30},"end":{"line":17,"character":37}},"kind":1},{"range":{"start":{"line":18,"character":22},"end":{"line":18,"character":29}},"kind":1},{"range":{"start":{"line":18,"character":35},"end":{"line":18,"character":42}},"kind":1},{"range":{"start":{"line":20,"character":22},"end":{"line":20,"character":29}},"kind":1},{"range":{"start":{"line":20,"character":35},"end":{"line":20,"character":42}},"kind":1},{"range":{"start":{"line":21,"character":30},"end":{"line":21,"character":37}},"kind":1},{"range":{"start":{"line":22,"character":22},"end":{"line":22,"character":29}},"kind":1},{"range":{"start":{"line":22,"character":35},"end":{"line":22,"character":42}},"kind":1},{"range":{"start":{"line":36,"character":21},"end":{"line":36,"character":28}},"kind":1},{"range":{"start":{"line":36,"character":34},"end":{"line":36,"character":41}},"kind":1},{"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":34}},"kind":1},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":28}},"kind":1},{"range":{"start":{"line":41,"character":34},"end":{"line":41,"character":41}},"kind":1},{"range":{"start":{"line":43,"character":21},"end":{"line":43,"character":28}},"kind":1},{"range":{"start":{"line":43,"character":34},"end":{"line":43,"character":41}},"kind":1},{"range":{"start":{"line":45,"character":21},"end":{"line":45,"character":28}},"kind":1},{"range":{"start":{"line":45,"character":34},"end":{"line":45,"character":41}},"kind":1},{"range":{"start":{"line":47,"character":20},"end":{"line":47,"character":27}},"kind":1},{"range":{"start":{"line":47,"character":33},"end":{"line":47,"character":40}},"kind":1},{"range":{"start":{"line":48,"character":28},"end":{"line":48,"character":35}},"kind":1},{"range":{"start":{"line":49,"character":22},"end":{"line":49,"character":29}},"kind":1},{"range":{"start":{"line":49,"character":35},"end":{"line":49,"character":42}},"kind":1},{"range":{"start":{"line":51,"character":21},"end":{"line":51,"character":28}},"kind":1},{"range":{"start":{"line":51,"character":34},"end":{"line":51,"character":41}},"kind":1},{"range":{"start":{"line":53,"character":27},"end":{"line":53,"character":34}},"kind":1},{"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":28}},"kind":1},{"range":{"start":{"line":56,"character":34},"end":{"line":56,"character":41}},"kind":1},{"range":{"start":{"line":58,"character":20},"end":{"line":58,"character":27}},"kind":1},{"range":{"start":{"line":58,"character":33},"end":{"line":58,"character":40}},"kind":1},{"range":{"start":{"line":60,"character":20},"end":{"line":60,"character":27}},"kind":1},{"range":{"start":{"line":60,"character":33},"end":{"line":60,"character":40}},"kind":1},{"range":{"start":{"line":61,"character":28},"end":{"line":61,"character":35}},"kind":1},{"range":{"start":{"line":62,"character":22},"end":{"line":62,"character":29}},"kind":1},{"range":{"start":{"line":62,"character":35},"end":{"line":62,"character":42}},"kind":1},{"range":{"start":{"line":64,"character":20},"end":{"line":64,"character":27}},"kind":1},{"range":{"start":{"line":64,"character":33},"end":{"line":64,"character":40}},"kind":1},{"range":{"start":{"line":66,"character":20},"end":{"line":66,"character":27}},"kind":1},{"range":{"start":{"line":66,"character":33},"end":{"line":66,"character":40}},"kind":1},{"range":{"start":{"line":71,"character":21},"end":{"line":71,"character":28}},"kind":1},{"range":{"start":{"line":71,"character":34},"end":{"line":71,"character":41}},"kind":1},{"range":{"start":{"line":73,"character":20},"end":{"line":73,"character":27}},"kind":1},{"range":{"start":{"line":73,"character":33},"end":{"line":73,"character":40}},"kind":1},{"range":{"start":{"line":74,"character":30},"end":{"line":74,"character":37}},"kind":1},{"range":{"start":{"line":75,"character":22},"end":{"line":75,"character":29}},"kind":1},{"range":{"start":{"line":75,"character":35},"end":{"line":75,"character":42}},"kind":1},{"range":{"start":{"line":77,"character":20},"end":{"line":77,"character":27}},"kind":1},{"range":{"start":{"line":77,"character":33},"end":{"line":77,"character":40}},"kind":1},{"range":{"start":{"line":78,"character":30},"end":{"line":78,"character":37}},"kind":1},{"range":{"start":{"line":79,"character":22},"end":{"line":79,"character":29}},"kind":1},{"range":{"start":{"line":79,"character":35},"end":{"line":79,"character":42}},"kind":1}]}
<<<
Content-Length: 286

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":14,"character":35},"end":{"line":14,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":5,"result":[]}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":14,"character":30}}}
>>>
Content-Length: 236

{"jsonrpc":"2.0","id":6,"result":{"contents":{"kind":"markdown","value":"### class `Ftduino`  \n\n---\nValue = `1`  \n\n---\n```cpp\nclass Ftduino {}\n```"},"range":{"start":{"line":14,"character":29},"end":{"line":14,"character":31}}}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":16,"character":48}}}
>>>
Content-Length: 1548

{"jsonrpc":"2.0","id":7,"result":[{"range":{"start":{"line":12,"character":12},"end":{"line":12,"character":21}},"kind":1},{"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":21}},"kind":1},{"range":{"start":{"line":16,"character":12},"end":{"line":16,"character":21}},"kind":1},{"range":{"start":{"line":18,"character":12},"end":{"line":18,"character":21}},"kind":1},{"range":{"start":{"line":20,"character":12},"end":{"line":20,"character":21}},"kind":1},{"range":{"start":{"line":22,"character":12},"end":{"line":22,"character":21}},"kind":1},{"range":{"start":{"line":47,"character":10},"end":{"line":47,"character":19}},"kind":1},{"range":{"start":{"line":49,"character":12},"end":{"line":49,"character":21}},"kind":1},{"range":{"start":{"line":58,"character":10},"end":{"line":58,"character":19}},"kind":1},{"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":19}},"kind":1},{"range":{"start":{"line":62,"character":12},"end":{"line":62,"character":21}},"kind":1},{"range":{"start":{"line":64,"character":10},"end":{"line":64,"character":19}},"kind":1},{"range":{"start":{"line":66,"character":10},"end":{"line":66,"character":19}},"kind":1},{"range":{"start":{"line":73,"character":10},"end":{"line":73,"character":19}},"kind":1},{"range":{"start":{"line":75,"character":12},"end":{"line":75,"character":21}},"kind":1},{"range":{"start":{"line":77,"character":10},"end":{"line":77,"character":19}},"kind":1},{"range":{"start":{"line":79,"character":12},"end":{"line":79,"character":21}},"kind":1}]}
<<<
Content-Length: 286

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":16,"character":48},"end":{"line":16,"character":48}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":16,"character":56}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":9,"result":null}
<<<
Content-Length: 213

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":75,"character":26}}}
>>>
Content-Length: 237

{"jsonrpc":"2.0","id":10,"result":{"contents":{"kind":"markdown","value":"### class `Ftduino`  \n\n---\nValue = `1`  \n\n---\n```cpp\nclass Ftduino {}\n```"},"range":{"start":{"line":75,"character":22},"end":{"line":75,"character":29}}}}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":75,"character":26}}}
>>>
Content-Length: 5109

{"jsonrpc":"2.0","id":11,"result":[{"range":{"start":{"line":12,"character":22},"end":{"line":12,"character":29}},"kind":1},{"range":{"start":{"line":12,"character":35},"end":{"line":12,"character":42}},"kind":1},{"range":{"start":{"line":13,"character":30},"end":{"line":13,"character":37}},"kind":1},{"range":{"start":{"line":14,"character":22},"end":{"line":14,"character":29}},"kind":1},{"range":{"start":{"line":14,"character":35},"end":{"line":14,"character":42}},"kind":1},{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":29}},"kind":1},{"range":{"start":{"line":16,"character":35},"end":{"line":16,"character":42}},"kind":1},{"range":{"start":{"line":17,"character":30},"end":{"line":17,"character":37}},"kind":1},{"range":{"start":{"line":18,"character":22},"end":{"line":18,"character":29}},"kind":1},{"range":{"start":{"line":18,"character":35},"end":{"line":18,"character":42}},"kind":1},{"range":{"start":{"line":20,"character":22},"end":{"line":20,"character":29}},"kind":1},{"range":{"start":{"line":20,"character":35},"end":{"line":20,"character":42}},"kind":1},{"range":{"start":{"line":21,"character":30},"end":{"line":21,"character":37}},"kind":1},{"range":{"start":{"line":22,"character":22},"end":{"line":22,"character":29}},"kind":1},{"range":{"start":{"line":22,"character":35},"end":{"line":22,"character":42}},"kind":1},{"range":{"start":{"line":36,"character":21},"end":{"line":36,"character":28}},"kind":1},{"range":{"start":{"line":36,"character":34},"end":{"line":36,"character":41}},"kind":1},{"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":34}},"kind":1},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":28}},"kind":1},{"range":{"start":{"line":41,"character":34},"end":{"line":41,"character":41}},"kind":1},{"range":{"start":{"line":43,"character":21},"end":{"line":43,"character":28}},"kind":1},{"range":{"start":{"line":43,"character":34},"end":{"line":43,"character":41}},"kind":1},{"range":{"start":{"line":45,"character":21},"end":{"line":45,"character":28}},"kind":1},{"range":{"start":{"line":45,"character":34},"end":{"line":45,"character":41}},"kind":1},{"range":{"start":{"line":47,"character":20},"end":{"line":47,"character":27}},"kind":1},{"range":{"start":{"line":47,"character":33},"end":{"line":47,"character":40}},"kind":1},{"range":{"start":{"line":48,"character":28},"end":{"line":48,"character":35}},"kind":1},{"range":{"start":{"line":49,"character":22},"end":{"line":49,"character":29}},"kind":1},{"range":{"start":{"line":49,"character":35},"end":{"line":49,"character":42}},"kind":1},{"range":{"start":{"line":51,"character":21},"end":{"line":51,"character":28}},"kind":1},{"range":{"start":{"line":51,"character":34},"end":{"line":51,"character":41}},"kind":1},{"range":{"start":{"line":53,"character":27},"end":{"line":53,"character":34}},"kind":1},{"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":28}},"kind":1},{"range":{"start":{"line":56,"character":34},"end":{"line":56,"character":41}},"kind":1},{"range":{"start":{"line":58,"character":20},"end":{"line":58,"character":27}},"kind":1},{"range":{"start":{"line":58,"character":33},"end":{"line":58,"character":40}},"kind":1},{"range":{"start":{"line":60,"character":20},"end":{"line":60,"character":27}},"kind":1},{"range":{"start":{"line":60,"character":33},"end":{"line":60,"character":40}},"kind":1},{"range":{"start":{"line":61,"character":28},"end":{"line":61,"character":35}},"kind":1},{"range":{"start":{"line":62,"character":22},"end":{"line":62,"character":29}},"kind":1},{"range":{"start":{"line":62,"character":35},"end":{"line":62,"character":42}},"kind":1},{"range":{"start":{"line":64,"character":20},"end":{"line":64,"character":27}},"kind":1},{"range":{"start":{"line":64,"character":33},"end":{"line":64,"character":40}},"kind":1},{"range":{"start":{"line":66,"character":20},"end":{"line":66,"character":27}},"kind":1},{"range":{"start":{"line":66,"character":33},"end":{"line":66,"character":40}},"kind":1},{"range":{"start":{"line":71,"character":21},"end":{"line":71,"character":28}},"kind":1},{"range":{"start":{"line":71,"character":34},"end":{"line":71,"character":41}},"kind":1},{"range":{"start":{"line":73,"character":20},"end":{"line":73,"character":27}},"kind":1},{"range":{"start":{"line":73,"character":33},"end":{"line":73,"character":40}},"kind":1},{"range":{"start":{"line":74,"character":30},"end":{"line":74,"character":37}},"kind":1},{"range":{"start":{"line":75,"character":22},"end":{"line":75,"character":29}},"kind":1},{"range":{"start":{"line":75,"character":35},"end":{"line":75,"character":42}},"kind":1},{"range":{"start":{"line":77,"character":20},"end":{"line":77,"character":27}},"kind":1},{"range":{"start":{"line":77,"character":33},"end":{"line":77,"character":40}},"kind":1},{"range":{"start":{"line":78,"character":30},"end":{"line":78,"character":37}},"kind":1},{"range":{"start":{"line":79,"character":22},"end":{"line":79,"character":29}},"kind":1},{"range":{"start":{"line":79,"character":35},"end":{"line":79,"character":42}},"kind":1}]}
<<<
Content-Length: 287

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":12,"result":[]}
<<<
Content-Length: 213

{"jsonrpc":"2.0","id":13,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":71,"character":54}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":13,"result":null}
<<<
Content-Length: 287

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":71,"character":54},"end":{"line":71,"character":54}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":14,"result":[]}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":69,"character":43}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":15,"result":[]}
<<<
Content-Length: 287

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":69,"character":43},"end":{"line":69,"character":43}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":16,"result":[]}
<<<
Content-Length: 213

{"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":69,"character":43}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":17,"result":null}
<<<
Content-Length: 213

{"jsonrpc":"2.0","id":18,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":71,"character":55}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":18,"result":null}
<<<
Content-Length: 213

{"jsonrpc":"2.0","id":19,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":71,"character":55}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":19,"result":null}
<<<
Content-Length: 287

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":32,"character":12},"end":{"line":32,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":20,"result":[]}
<<<
Content-Length: 316

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":995},"contentChanges":[{"range":{"start":{"line":32,"character":12},"end":{"line":32,"character":12}},"rangeLength":0,"text":"\r\n  "}]}}Content-Length: 184

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 192

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":2,"diagnostics":[]}}Content-Length: 1481

{"jsonrpc":"2.0","id":21,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":996},"contentChanges":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":2}},"rangeLength":0,"text":"\r\n  "},{"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 184

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 192

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":4,"diagnostics":[]}}Content-Length: 1481

{"jsonrpc":"2.0","id":22,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 3453

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":996},"text":"#include <FtduinoSimple.h>\r\n#include <AccessNode.h>\r\n\r\nint i3Wert = 0;\r\nRobotikInterConnect* ric;\r\nint counter = 0;\r\nbool isClicked = false;\r\n\r\n\r\nvoid setup() { //############## Aktuelle Labels an Maschiene stimmen ##############\r\n    ric = new RobotikInterConnect(\"bedeckler\");\r\n\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n}\r\nvoid loop() {\r\n  // put your main code here, to run repeatedly:\r\n  run();\r\n}\r\n\r\n//\r\n\r\nvoid run() {\r\n\r\n  \r\n  ric->send(\"mfc\",\"websocket\",\"OK\"); //ric Anbindung -> sendet OK\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I1)) delay(1); // Lichtsensor 1 wartet auf Eingabe\r\n  delay(500);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.output_set(Ftduino::O7, Ftduino::HI); //Deckelspirale an\r\n  delay(6000);\r\n  ftduino.output_set(Ftduino::O7, Ftduino::OFF); //Deckelspirale aus\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::RIGHT); //Deckelmodul fährt zurück\r\n  while (!ftduino.input_get(Ftduino::I3)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF); //Deckelmodul stoppt an Schalter\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I4)) delay(1); //Lichtsensor 2 wartet auf Eingabe\r\n  delay(2000);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::RIGHT); //Pressmodul fährt runter / presst\r\n  delay(2400);\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt hoch\r\n  while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF); //Pressmodul stoppt an Schalter\r\n  \r\n  ftduino.motor_set(Ftduino::M3, Ftduino::RIGHT); //Schranke geht auf\r\n  delay(2500);\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::OFF); //Schranke aus\r\n\r\n  ric->send(\"mfc\",\"websocket\",\"NEXT\"); //Bedeckler sendet NEXT an ric\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgangsposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n  delay(500);\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 192

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":5,"diagnostics":[]}}
<<<
Content-Length: 213

{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":70,"character":24}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":23,"result":null}
<<<
Content-Length: 414

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":997},"contentChanges":[{"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":2}},"rangeLength":2,"text":""},{"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":0}},"rangeLength":0,"text":"  "}]}}Content-Length: 184

{"jsonrpc":"2.0","id":24,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 192

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":7,"diagnostics":[]}}Content-Length: 1481

{"jsonrpc":"2.0","id":24,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 3453

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":997},"text":"#include <FtduinoSimple.h>\r\n#include <AccessNode.h>\r\n\r\nint i3Wert = 0;\r\nRobotikInterConnect* ric;\r\nint counter = 0;\r\nbool isClicked = false;\r\n\r\n\r\nvoid setup() { //############## Aktuelle Labels an Maschiene stimmen ##############\r\n    ric = new RobotikInterConnect(\"bedeckler\");\r\n\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n}\r\nvoid loop() {\r\n  // put your main code here, to run repeatedly:\r\n  run();\r\n}\r\n\r\n//\r\n\r\nvoid run() {\r\n  \r\n\r\n  ric->send(\"mfc\",\"websocket\",\"OK\"); //ric Anbindung -> sendet OK\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I1)) delay(1); // Lichtsensor 1 wartet auf Eingabe\r\n  delay(500);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.output_set(Ftduino::O7, Ftduino::HI); //Deckelspirale an\r\n  delay(6000);\r\n  ftduino.output_set(Ftduino::O7, Ftduino::OFF); //Deckelspirale aus\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::RIGHT); //Deckelmodul fährt zurück\r\n  while (!ftduino.input_get(Ftduino::I3)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF); //Deckelmodul stoppt an Schalter\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I4)) delay(1); //Lichtsensor 2 wartet auf Eingabe\r\n  delay(2000);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::RIGHT); //Pressmodul fährt runter / presst\r\n  delay(2400);\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt hoch\r\n  while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF); //Pressmodul stoppt an Schalter\r\n  \r\n  ftduino.motor_set(Ftduino::M3, Ftduino::RIGHT); //Schranke geht auf\r\n  delay(2500);\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::OFF); //Schranke aus\r\n\r\n  ric->send(\"mfc\",\"websocket\",\"NEXT\"); //Bedeckler sendet NEXT an ric\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgangsposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n  delay(500);\r\n}\r\n"}}Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":998},"contentChanges":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":2}},"rangeLength":0,"text":"r"}]}}Content-Length: 184

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 553

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","diagnostics":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'r'"},{"range":{"start":{"line":35,"character":5},"end":{"line":35,"character":7}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]}}Content-Length: 1481

{"jsonrpc":"2.0","id":25,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":999},"contentChanges":[{"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":3}},"rangeLength":0,"text":"i"}]}}Content-Length: 184

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 554

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","diagnostics":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":4}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'ri'"},{"range":{"start":{"line":35,"character":5},"end":{"line":35,"character":7}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]}}Content-Length: 1481

{"jsonrpc":"2.0","id":26,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 310

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1000},"contentChanges":[{"range":{"start":{"line":33,"character":4},"end":{"line":33,"character":4}},"rangeLength":0,"text":"c"}]}}Content-Length: 184

{"jsonrpc":"2.0","id":27,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 379

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","diagnostics":[{"range":{"start":{"line":35,"character":2},"end":{"line":35,"character":5}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]}}Content-Length: 1481

{"jsonrpc":"2.0","id":27,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 285

{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":33,"character":5},"end":{"line":33,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":28,"result":[]}
<<<
Content-Length: 3457

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1000},"text":"#include <FtduinoSimple.h>\r\n#include <AccessNode.h>\r\n\r\nint i3Wert = 0;\r\nRobotikInterConnect* ric;\r\nint counter = 0;\r\nbool isClicked = false;\r\n\r\n\r\nvoid setup() { //############## Aktuelle Labels an Maschiene stimmen ##############\r\n    ric = new RobotikInterConnect(\"bedeckler\");\r\n\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n}\r\nvoid loop() {\r\n  // put your main code here, to run repeatedly:\r\n  run();\r\n}\r\n\r\n//\r\n\r\nvoid run() {\r\n  ric\r\n\r\n  ric->send(\"mfc\",\"websocket\",\"OK\"); //ric Anbindung -> sendet OK\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I1)) delay(1); // Lichtsensor 1 wartet auf Eingabe\r\n  delay(500);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.output_set(Ftduino::O7, Ftduino::HI); //Deckelspirale an\r\n  delay(6000);\r\n  ftduino.output_set(Ftduino::O7, Ftduino::OFF); //Deckelspirale aus\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::RIGHT); //Deckelmodul fährt zurück\r\n  while (!ftduino.input_get(Ftduino::I3)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF); //Deckelmodul stoppt an Schalter\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I4)) delay(1); //Lichtsensor 2 wartet auf Eingabe\r\n  delay(2000);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::RIGHT); //Pressmodul fährt runter / presst\r\n  delay(2400);\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt hoch\r\n  while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF); //Pressmodul stoppt an Schalter\r\n  \r\n  ftduino.motor_set(Ftduino::M3, Ftduino::RIGHT); //Schranke geht auf\r\n  delay(2500);\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::OFF); //Schranke aus\r\n\r\n  ric->send(\"mfc\",\"websocket\",\"NEXT\"); //Bedeckler sendet NEXT an ric\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgangsposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n  delay(500);\r\n}\r\n"}}Content-Length: 310

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1001},"contentChanges":[{"range":{"start":{"line":33,"character":5},"end":{"line":33,"character":5}},"rangeLength":0,"text":"-"}]}}Content-Length: 184

{"jsonrpc":"2.0","id":29,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 410

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","diagnostics":[{"range":{"start":{"line":33,"character":5},"end":{"line":33,"character":6}},"severity":1,"code":"typecheck_invalid_operands","source":"clang","message":"Invalid operands to binary expression ('RobotikInterConnect *' and 'void')"}]}}Content-Length: 1481

{"jsonrpc":"2.0","id":29,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 310

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1002},"contentChanges":[{"range":{"start":{"line":33,"character":6},"end":{"line":33,"character":6}},"rangeLength":0,"text":">"}]}}Content-Length: 268

{"jsonrpc":"2.0","id":30,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":33,"character":7},"context":{"triggerKind":2,"triggerCharacter":">"}}}Content-Length: 184

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 1244

{"jsonrpc":"2.0","id":30,"result":{"isIncomplete":false,"items":[{"label":" hasData()","kind":2,"detail":"bool","sortText":"409198afhasData","filterText":"hasData","insertText":"hasData()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":33,"character":7},"end":{"line":33,"character":7}},"newText":"hasData()"}},{"label":" read()","kind":2,"detail":"String","sortText":"409198afread","filterText":"read","insertText":"read()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":33,"character":7},"end":{"line":33,"character":7}},"newText":"read()"}},{"label":" read_wait()","kind":2,"detail":"String","sortText":"409198afread_wait","filterText":"read_wait","insertText":"read_wait()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":33,"character":7},"end":{"line":33,"character":7}},"newText":"read_wait()"}},{"label":" send(String target, String targetgroup, String msg)","kind":2,"detail":"void","sortText":"409198afsend","filterText":"send","insertText":"send(${1:String target}, ${2:String targetgroup}, ${3:String msg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":33,"character":7},"end":{"line":33,"character":7}},"newText":"send(${1:String target}, ${2:String targetgroup}, ${3:String msg})"}}]}}Content-Length: 365

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","diagnostics":[{"range":{"start":{"line":35,"character":2},"end":{"line":35,"character":5}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ric' in 'RobotikInterConnect'"}]}}Content-Length: 1481

{"jsonrpc":"2.0","id":31,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 285

{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":33,"character":7},"end":{"line":33,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":32,"result":[]}
<<<
Content-Length: 3459

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1002},"text":"#include <FtduinoSimple.h>\r\n#include <AccessNode.h>\r\n\r\nint i3Wert = 0;\r\nRobotikInterConnect* ric;\r\nint counter = 0;\r\nbool isClicked = false;\r\n\r\n\r\nvoid setup() { //############## Aktuelle Labels an Maschiene stimmen ##############\r\n    ric = new RobotikInterConnect(\"bedeckler\");\r\n\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n}\r\nvoid loop() {\r\n  // put your main code here, to run repeatedly:\r\n  run();\r\n}\r\n\r\n//\r\n\r\nvoid run() {\r\n  ric->\r\n\r\n  ric->send(\"mfc\",\"websocket\",\"OK\"); //ric Anbindung -> sendet OK\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I1)) delay(1); // Lichtsensor 1 wartet auf Eingabe\r\n  delay(500);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.output_set(Ftduino::O7, Ftduino::HI); //Deckelspirale an\r\n  delay(6000);\r\n  ftduino.output_set(Ftduino::O7, Ftduino::OFF); //Deckelspirale aus\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::RIGHT); //Deckelmodul fährt zurück\r\n  while (!ftduino.input_get(Ftduino::I3)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF); //Deckelmodul stoppt an Schalter\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I4)) delay(1); //Lichtsensor 2 wartet auf Eingabe\r\n  delay(2000);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::RIGHT); //Pressmodul fährt runter / presst\r\n  delay(2400);\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt hoch\r\n  while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF); //Pressmodul stoppt an Schalter\r\n  \r\n  ftduino.motor_set(Ftduino::M3, Ftduino::RIGHT); //Schranke geht auf\r\n  delay(2500);\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::OFF); //Schranke aus\r\n\r\n  ric->send(\"mfc\",\"websocket\",\"NEXT\"); //Bedeckler sendet NEXT an ric\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgangsposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n  delay(500);\r\n}\r\n"}}Content-Length: 285

{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":33,"character":7},"end":{"line":33,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":33,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1003},"contentChanges":[{"range":{"start":{"line":33,"character":6},"end":{"line":33,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 184

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 410

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","diagnostics":[{"range":{"start":{"line":33,"character":5},"end":{"line":33,"character":6}},"severity":1,"code":"typecheck_invalid_operands","source":"clang","message":"Invalid operands to binary expression ('RobotikInterConnect *' and 'void')"}]}}Content-Length: 1481

{"jsonrpc":"2.0","id":34,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1004},"contentChanges":[{"range":{"start":{"line":33,"character":5},"end":{"line":33,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 184

{"jsonrpc":"2.0","id":35,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 379

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","diagnostics":[{"range":{"start":{"line":35,"character":2},"end":{"line":35,"character":5}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]}}Content-Length: 1481

{"jsonrpc":"2.0","id":35,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1005},"contentChanges":[{"range":{"start":{"line":33,"character":4},"end":{"line":33,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 184

{"jsonrpc":"2.0","id":36,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 554

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","diagnostics":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":4}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'ri'"},{"range":{"start":{"line":35,"character":5},"end":{"line":35,"character":7}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]}}Content-Length: 1481

{"jsonrpc":"2.0","id":36,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":36}}Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1006},"contentChanges":[{"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 184

{"jsonrpc":"2.0","id":37,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 553

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","diagnostics":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'r'"},{"range":{"start":{"line":35,"character":5},"end":{"line":35,"character":7}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]}}Content-Length: 1481

{"jsonrpc":"2.0","id":37,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":37}}Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1007},"contentChanges":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 184

{"jsonrpc":"2.0","id":38,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":17,"diagnostics":[]}}Content-Length: 1481

{"jsonrpc":"2.0","id":38,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 310

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1008},"contentChanges":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":2}},"rangeLength":0,"text":"d"}]}}Content-Length: 184

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 553

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","diagnostics":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'd'"},{"range":{"start":{"line":35,"character":5},"end":{"line":35,"character":7}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]}}Content-Length: 1481

{"jsonrpc":"2.0","id":39,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 452

{"jsonrpc":"2.0","id":40,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":3}},"message":"Unknown type name 'd'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":40,"result":[]}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1009},"contentChanges":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 184

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":19,"diagnostics":[]}}Content-Length: 1481

{"jsonrpc":"2.0","id":41,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":41}}Content-Length: 310

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1010},"contentChanges":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":2}},"rangeLength":0,"text":"f"}]}}Content-Length: 184

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 553

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","diagnostics":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'f'"},{"range":{"start":{"line":35,"character":5},"end":{"line":35,"character":7}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]}}Content-Length: 1481

{"jsonrpc":"2.0","id":42,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 285

{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":43,"result":[]}
<<<
Content-Length: 452

{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":3}},"message":"Unknown type name 'f'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":44,"result":[]}
<<<
Content-Length: 3455

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1010},"text":"#include <FtduinoSimple.h>\r\n#include <AccessNode.h>\r\n\r\nint i3Wert = 0;\r\nRobotikInterConnect* ric;\r\nint counter = 0;\r\nbool isClicked = false;\r\n\r\n\r\nvoid setup() { //############## Aktuelle Labels an Maschiene stimmen ##############\r\n    ric = new RobotikInterConnect(\"bedeckler\");\r\n\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n}\r\nvoid loop() {\r\n  // put your main code here, to run repeatedly:\r\n  run();\r\n}\r\n\r\n//\r\n\r\nvoid run() {\r\n  f\r\n\r\n  ric->send(\"mfc\",\"websocket\",\"OK\"); //ric Anbindung -> sendet OK\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I1)) delay(1); // Lichtsensor 1 wartet auf Eingabe\r\n  delay(500);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.output_set(Ftduino::O7, Ftduino::HI); //Deckelspirale an\r\n  delay(6000);\r\n  ftduino.output_set(Ftduino::O7, Ftduino::OFF); //Deckelspirale aus\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::RIGHT); //Deckelmodul fährt zurück\r\n  while (!ftduino.input_get(Ftduino::I3)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF); //Deckelmodul stoppt an Schalter\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I4)) delay(1); //Lichtsensor 2 wartet auf Eingabe\r\n  delay(2000);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::RIGHT); //Pressmodul fährt runter / presst\r\n  delay(2400);\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt hoch\r\n  while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF); //Pressmodul stoppt an Schalter\r\n  \r\n  ftduino.motor_set(Ftduino::M3, Ftduino::RIGHT); //Schranke geht auf\r\n  delay(2500);\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::OFF); //Schranke aus\r\n\r\n  ric->send(\"mfc\",\"websocket\",\"NEXT\"); //Bedeckler sendet NEXT an ric\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgangsposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n  delay(500);\r\n}\r\n"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 452

{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":3}},"message":"Unknown type name 'f'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":45,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":43,"character":70}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":46,"result":[]}
<<<
Content-Length: 287

{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":43,"character":70},"end":{"line":46,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":47,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 286

{"jsonrpc":"2.0","id":48,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":70}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":48,"result":[]}
<<<
Content-Length: 286

{"jsonrpc":"2.0","id":49,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":43,"character":2},"end":{"line":43,"character":70}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":49,"result":[]}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":50,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":43,"character":2}}}
>>>
Content-Length: 254

{"jsonrpc":"2.0","id":50,"result":{"contents":{"kind":"markdown","value":"### variable `ftduino`  \n\n---\nType: `class Ftduino`  \n\n---\n```cpp\nextern Ftduino ftduino\n```"},"range":{"start":{"line":43,"character":2},"end":{"line":43,"character":9}}}}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":51,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":43,"character":2}}}
>>>
Content-Length: 267

{"jsonrpc":"2.0","id":51,"result":[{"uri":"file:///C:/Users/I%20use%20Arch%20btw%21/AppData/Local/Arduino15/packages/ftduino/hardware/avr/0.0.17/libraries/FtduinoSimple/FtduinoSimple.cpp","range":{"start":{"line":20,"character":8},"end":{"line":20,"character":15}}}]}
<<<
Content-Length: 7726

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/AppData/Local/Arduino15/packages/ftduino/hardware/avr/0.0.17/libraries/FtduinoSimple/FtduinoSimple.cpp","languageId":"cpp","version":1,"text":"/*\n  FtduinoSimple.cpp - Library for ftduino\n\n  (c) 2017 by Till Harbaum <till@harbaum.org>\n\n  A very simple io library for the ftduino only supporting\n  diginal IO but without and interrupt handlers and with a\n  small footprint.\n\n  If you need analog io, ultrasonic IO and fast counters use\n  the full feature version.\n*/\n\n#include \"Arduino.h\"\n\n#include <avr/pgmspace.h>\n#include <avr/interrupt.h>\n\n#include \"FtduinoSimple.h\"\n\nFtduino ftduino;\n\nvoid Ftduino::cd4051_init() {\n  // PC.6 = ING, PF.0 = A, PF1 = B, PD.5 = C\n  \n  // make all 4051 control signals outputs\n  DDRC |= (1<<6);   // INHIBIT\n  PORTC |= (1<<6);  // pull it high by default, disabling the 4051\n\n  DDRF |= (1<<0);   // A\n  PORTF &= ~(1<<0); // = low\n  \n  DDRF |= (1<<1);   // B\n  PORTF &= ~(1<<1); // = low\n  \n  DDRD |= (1<<5);   // C\n  PORTD &= ~(1<<5); // = low\n}\n\nvoid Ftduino::cd4051_set(char mode) {\n  // enable/disable pullup\n  // 0..7 = on for I1..I8, 8 = off\n  if(mode & 8)     \n    PORTC |= (1<<6);   // activate INH pin\n  else {\n    PORTC &= ~(1<<6);  // de-activate INH pin\n    if(mode & 1)   PORTF |=  (1<<0);  // A=1\n    else           PORTF &= ~(1<<0);  // A=0\n    if(mode & 2)   PORTF |=  (1<<1);  // B=1\n    else           PORTF &= ~(1<<1);  // B=0\n    if(mode & 4)   PORTD |=  (1<<5);  // C=1\n    else           PORTD &= ~(1<<5);  // C=0    \n  }\n}\n\nvoid Ftduino::input_init() {\n  cd4051_init();\n\n  // the digital counterparts of ADC4-11 are distributed all over the chip\n\n  // ADC4-7 are PF.4-PF.7\n  DDRF &= ~((1<<7)|(1<<6)|(1<<5)|(1<<4));\n  // ADC8,9,10 are PD.4,PD.6 and PD.7\n  DDRD &= ~((1<<7)|(1<<6)|(1<<4));\n  // ADC11 is PB.4\n  DDRB &= ~(1<<4);\n}\n\nbool Ftduino::input_get(uint8_t ch) {\n  static char cd4051_mode = -1;\n  bool rval = false;\n  \n  // this enables the pullup for the given channel and returns\n  // its digital state\n\n  // enable pullup if necessary\n  if(cd4051_mode != ch) {\n    cd4051_set(ch);\n    _delay_us(100);\n    cd4051_mode = ch;\n  }\n\n  switch(ch) {\n    case Ftduino::I1:\n      rval = PINF & (1<<4);\n      break;\n    case Ftduino::I2:\n      rval = PINF & (1<<5);\n      break;\n    case Ftduino::I3:\n      rval = PINF & (1<<6);\n      break;\n    case Ftduino::I4:\n      rval = PINF & (1<<7);\n      break;\n    case Ftduino::I5:\n      rval = PIND & (1<<4);\n      break;\n    case Ftduino::I6:\n      rval = PIND & (1<<6);\n      break;\n    case Ftduino::I7:\n      rval = PIND & (1<<7);\n      break;\n    case Ftduino::I8:\n      rval = PINB & (1<<4);\n      break;\n  }\n\n  // return true if pin is grounded\n  return !rval;\n}\n\nvoid Ftduino::output_init() {\n  uint8_t i;\n  \n  // configure /SS, SCK and MOSI as output\n  // drive /SS it high\n  DDRB |= (1<<0) | (1<<1) | (1<<2);\n  PORTB |= (1<<0);\n\n  // enable SPI, no interrupts, MSB first, Master mode,\n  // mode 1 (SCK low when idle, data valid on falling edge)\n  // and clock = FCPU/16 = 1Mhz\n  SPCR = (1<<SPE) | (0<<DORD) | (1<<MSTR) |\n    (0<<CPOL) | (1<<CPHA) | (0<<SPR1) | (1<<SPR0);\n\n  SPSR &= ~(1<<SPI2X);   // single speed\n\n  // PE.6 is EN. Chip is in sleep then EN == 0. EN is held low\n  // during and directly after reset by pull-down r31\n  DDRE  |= (1<<6);\n  PORTE |= (1<<6);  // not in sleep mode\n\n  // PB.7 is the PWM input of the IN6 of O2. We don't use that feature by\n  // now, so it's just pulled down\n  DDRB |= (1<<7);\n  PORTB &= ~(1<<7);  // no PWM on IN6\n\n  spi_tx = 0;        // all outputs off\n  output_spi_tx();\n}\n\nvoid Ftduino::output_spi_tx(void) {\n  uint8_t i;\n  uint32_t data = spi_tx;\n  \n  // set /SS low\n  PORTB &= ~(1<<0);\n\n  // send four bytes (32 bit) via SPI\n  for(i=0;i<4;i++) {\n    SPDR = data & 0xff;\n    data >>= 8;\n    while(!(SPSR & (1<<SPIF)));\n  }\n  \n  // set /SS high\n  PORTB |=  (1<<0);\n}\n\n#define MC33879_PORT(a)   (1<<(a-1))\n\nstatic const uint8_t mc33879_highside_map[4] = { \n      MC33879_PORT(2), MC33879_PORT(6), MC33879_PORT(4), MC33879_PORT(5) };\n\nstatic const uint8_t mc33879_lowside_map[4] = { \n      MC33879_PORT(8), MC33879_PORT(1), MC33879_PORT(7), MC33879_PORT(3) };\n\n// any SPI transfer transfers 16 bits per mc33879 and 32 bits in total\nvoid Ftduino::output_set(uint8_t port, uint8_t mode) {\n  uint32_t set_mask = 0, clr_mask = 0;\n\n  // mode can be 0 (floating), 1 (high) or 2 (low)\n  if(mode == 1) {\n    set_mask = mc33879_highside_map[port&3];  // highside to be set\n    clr_mask = mc33879_lowside_map[port&3];   // lowside to be cleared\n  } else if(mode == 2) {\n    set_mask = mc33879_lowside_map[port&3];   // lowside to be set\n    clr_mask = mc33879_highside_map[port&3];  // highside to be cleared\n  } else {\n    set_mask = 0;                             // nothing to be set\n    clr_mask = mc33879_highside_map[port&3] | // highside and lowside to be cleared\n               mc33879_lowside_map[port&3];\n  }\n\n  // ports O1..O4 (0-3) are in MSB, ports O5-O8 (4-7) are in MSB of lower 16 bit\n  if(port & 4) {\n    set_mask <<= 8;\n    clr_mask <<= 8;\n  } else {\n    set_mask <<= 24;\n    clr_mask <<= 24;\n  }\n\n  spi_tx |=  set_mask;\n  spi_tx &= ~clr_mask;\n\n  output_spi_tx();\n}\n\nvoid Ftduino::motor_set(uint8_t port, uint8_t mode) {\n  // map from motor to output port\n  uint8_t o = (2 * (port - Ftduino::M1)) + Ftduino::O1;\n\n  switch(mode) {\n    case Ftduino::OFF:\n      // both outputs open\n      output_set(o  , Ftduino::OFF);\n      output_set(o+1, Ftduino::OFF);\n      break;\n      \n    case Ftduino::LEFT:\n      // both outputs driven low/hi\n      output_set(o  , Ftduino::LO);\n      output_set(o+1, Ftduino::HI);\n      break;\n      \n    case Ftduino::RIGHT:\n      // both outputs driven low/hi\n      output_set(o  , Ftduino::HI);\n      output_set(o+1, Ftduino::LO);\n      break;\n      \n    case Ftduino::BRAKE:\n      // both outputs driven low\n      output_set(o  , Ftduino::LO);\n      output_set(o+1, Ftduino::LO);\n      break;\n  }\n}\n\n// control pull-down on c1 to trigger distance sensor\nvoid Ftduino::pulldown_c1_init() {\n  DDRE |= (1<<2);      // pulldown is controlled by PE.2 (#HWB)\n  PORTE &= ~(1<<2);    // de-activate by default\n}\n\nvoid Ftduino::pulldown_c1_enable(char on) {\n  if(on) PORTE |=  (1<<2);\n  else   PORTE &= ~(1<<2);\n}\n\nbool Ftduino::counter_get_state(uint8_t ch) {\n  if(ch == Ftduino::C1) return !(PIND & (1<<2));\n  if(ch == Ftduino::C2) return !(PIND & (1<<3));\n  if(ch == Ftduino::C3) return !(PINB & (1<<5));\n  if(ch == Ftduino::C4) return !(PINB & (1<<6));\n\n  return false;\n}\n\nvoid Ftduino::counter_init(void) {\n  // C1/C2 are PD.2/PD.3 and C3/C4 are on PB.5/PB.6\n  DDRD &= ~((1 << 2) | (1 << 3));      // counter ports C1 and C2 are inputs\n  PORTD &= ~((1 << 2) | (1 << 3));     // disable internal pullup, we use external\n  DDRB &= ~((1 << 5) | (1 << 6));      // counter ports C3 and C4 are inputs\n  PORTB &= ~((1 << 5) | (1 << 6));     // disable internal pullup, we use external\n}\n\nFtduino::Ftduino() {\n  // ---------------------------------------------------------\n  \n  // prepare digital input system fot I1..I8\n  input_init();\n\n  // init the pulldown for the ultrasonic. However, no\n  // support for the sensor in the simple lib\n  pulldown_c1_init();\n\n  // prepare spi service for M1..M4/O1..O8\n  // No PWM in the simple lib\n  output_init();\n\n  // the simple lib only uses the counters as digital inouts\n  counter_init();\n}\n\n"}}}Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/AppData/Local/Arduino15/packages/ftduino/hardware/avr/0.0.17/libraries/FtduinoSimple/FtduinoSimple.cpp"}}}
>>>
Content-Length: 240

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c:/Users/I%20use%20Arch%20btw%21/AppData/Local/Arduino15/packages/ftduino/hardware/avr/0.0.17/libraries/FtduinoSimple/FtduinoSimple.cpp","diagnostics":[]}}Content-Length: 113

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":52,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":43,"character":2}}}
>>>
Content-Length: 254

{"jsonrpc":"2.0","id":52,"result":{"contents":{"kind":"markdown","value":"### variable `ftduino`  \n\n---\nType: `class Ftduino`  \n\n---\n```cpp\nextern Ftduino ftduino\n```"},"range":{"start":{"line":43,"character":2},"end":{"line":43,"character":9}}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":53,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":43,"character":2}}}
>>>
Content-Length: 254

{"jsonrpc":"2.0","id":53,"result":{"contents":{"kind":"markdown","value":"### variable `ftduino`  \n\n---\nType: `class Ftduino`  \n\n---\n```cpp\nextern Ftduino ftduino\n```"},"range":{"start":{"line":43,"character":2},"end":{"line":43,"character":9}}}}Content-Length: 118

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":54,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":33,"character":3}}}
>>>
Content-Length: 123

{"jsonrpc":"2.0","id":54,"result":[{"range":{"start":{"line":35,"character":2},"end":{"line":35,"character":5}},"kind":1}]}
<<<
Content-Length: 452

{"jsonrpc":"2.0","id":55,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":3}},"message":"Unknown type name 'f'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":55,"result":[]}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1011},"contentChanges":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 184

{"jsonrpc":"2.0","id":56,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":22,"diagnostics":[]}}Content-Length: 1481

{"jsonrpc":"2.0","id":56,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 378

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1012},"contentChanges":[{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":2}},"rangeLength":0,"text":"ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus"}]}}Content-Length: 184

{"jsonrpc":"2.0","id":57,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"}}}
>>>
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":23,"diagnostics":[]}}Content-Length: 1481

{"jsonrpc":"2.0","id":57,"result":[{"name":"i3Wert","detail":"int","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":4},"end":{"line":3,"character":10}}},{"name":"ric","detail":"RobotikInterConnect *","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":24}},"selectionRange":{"start":{"line":4,"character":21},"end":{"line":4,"character":24}}},{"name":"counter","detail":"int","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":15}},"selectionRange":{"start":{"line":5,"character":4},"end":{"line":5,"character":11}}},{"name":"isClicked","detail":"bool","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":22}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":14}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":28,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"run","detail":"void ()","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":8}}}]}
<<<
Content-Length: 287

{"jsonrpc":"2.0","id":58,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"range":{"start":{"line":33,"character":70},"end":{"line":33,"character":70}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":58,"result":[]}
<<<
Content-Length: 3523

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino","version":1012},"text":"#include <FtduinoSimple.h>\r\n#include <AccessNode.h>\r\n\r\nint i3Wert = 0;\r\nRobotikInterConnect* ric;\r\nint counter = 0;\r\nbool isClicked = false;\r\n\r\n\r\nvoid setup() { //############## Aktuelle Labels an Maschiene stimmen ##############\r\n    ric = new RobotikInterConnect(\"bedeckler\");\r\n\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF);\r\n\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n}\r\nvoid loop() {\r\n  // put your main code here, to run repeatedly:\r\n  run();\r\n}\r\n\r\n//\r\n\r\nvoid run() {\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ric->send(\"mfc\",\"websocket\",\"OK\"); //ric Anbindung -> sendet OK\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I1)) delay(1); // Lichtsensor 1 wartet auf Eingabe\r\n  delay(500);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.output_set(Ftduino::O7, Ftduino::HI); //Deckelspirale an\r\n  delay(6000);\r\n  ftduino.output_set(Ftduino::O7, Ftduino::OFF); //Deckelspirale aus\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::RIGHT); //Deckelmodul fährt zurück\r\n  while (!ftduino.input_get(Ftduino::I3)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF); //Deckelmodul stoppt an Schalter\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  while (ftduino.input_get(Ftduino::I4)) delay(1); //Lichtsensor 2 wartet auf Eingabe\r\n  delay(2000);\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::OFF); //Hauptförderband aus\r\n\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::RIGHT); //Pressmodul fährt runter / presst\r\n  delay(2400);\r\n  ftduino.motor_set(Ftduino::M1, Ftduino::LEFT); //Pressmodul fährt hoch\r\n  while (!ftduino.input_get(Ftduino::I5)) delay(1);\r\n    ftduino.motor_set(Ftduino::M1, Ftduino::OFF); //Pressmodul stoppt an Schalter\r\n  \r\n  ftduino.motor_set(Ftduino::M3, Ftduino::RIGHT); //Schranke geht auf\r\n  delay(2500);\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::OFF); //Schranke aus\r\n\r\n  ric->send(\"mfc\",\"websocket\",\"NEXT\"); //Bedeckler sendet NEXT an ric\r\n  ric->read_wait(); //Bedeckler wartet auf GO von ric\r\n\r\n  ftduino.output_set(Ftduino::O8, Ftduino::HI); //Hauptförderband an\r\n\r\n  ftduino.motor_set(Ftduino::M2, Ftduino::LEFT); //Deckelmodul fährt in Ausgansposition\r\n    while (!ftduino.input_get(Ftduino::I2)) delay(1);\r\n    ftduino.motor_set(Ftduino::M2, Ftduino::OFF);\r\n\r\n  ftduino.motor_set(Ftduino::M3, Ftduino::LEFT); //Schranke fährt in Ausgangsposition\r\n    while (!ftduino.input_get(Ftduino::I6)) delay(1);\r\n    ftduino.motor_set(Ftduino::M3, Ftduino::OFF);\r\n\r\n  delay(500);\r\n}\r\n"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"8","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"8","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"9","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"9","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":59,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/I%20use%20Arch%20btw%21/Documents/GitHub/bedeckler/bedeckler.ino"},"position":{"line":21,"character":8}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":59,"result":null}